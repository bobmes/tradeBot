# -*- coding: utf-8 -*-
"""
Created on Sat Jan 23 17:24:23 2021

@author: bob_m
"""
import os
os.chdir("C://Users//bob_m//Desktop//Persoonlijk//Trade bot//CODE")

import websocket, json, pprint
import ta
import numpy as np
import pandas as pd
import math
from ta.volatility import BollingerBands
from ta.momentum import RSIIndicator, StochasticOscillator
from ta.trend import MACD, ema_indicator

#%% READ DATA
df = pd.read_csv("bitstampUSD_1-min_data_2012-01-01_to_2020-12-31.csv")

#%%

BIGGEST_IND_PERIOD = 30
RSI_PERIOD = 14
RSI_OVERBOUGHT = 70
RSI_OVERSOLD = 30

#%%
course = []
for i in range(len(df)):
    close = df.loc[i, 'Close']
    if not math.isnan(close):
        old_close = close
    
    if math.isnan(close):
        course.append(old_close)
    else:
        course.append(old_close)
        
    if len(course) > 60:
        del course[0]
    
    np_course = np.array(course)
    if len(course) >= BIGGEST_IND_PERIOD:
# =============================================================================
#         # Bollinger bands
#         upperband, middleband, lowerband = talib.BBANDS(np_course, timeperiod=5, nbdevup=2, nbdevdn=2, matype=0)
#         print(lowerband)
# =============================================================================
        
        # MACD
        macd, macdsignal, macdhist = ta.MACD(np_course, fastperiod=12, slowperiod=26, signalperiod=9)
        print(macdhist)
# =============================================================================
#         # RSI
#         rsi = talib.RSI(np_course, RSI_PERIOD)
#         last_rsi = rsi[-1]
#         
#         # Stochastic
#         #slowk, slowd = talib.STOCH(high, low, np_course, fastk_period=5, slowk_period=3, slowk_matype=0, slowd_period=3, slowd_matype=0)
# 
#         # Exponential moving average
#         real = talib.EMA(np_course, timeperiod=30)
# =============================================================================
        
        
    
    if i == 2000:
        break
    
#%%
def Stoch(close,  high, low):
    slowk, slowd = ta.STOCH(high, low, close)
    stochSell = ((slowk < slowd) & (slowk.shift(1) > slowd.shift(1))) & (slowd > 80)
    stochBuy = ((slowk > slowd) & (slowk.shift(1) < slowd.shift(1))) & (slowd < 20)
    return stochSell,stochBuy, slowk,slowd

def RSI(close,timePeriod):
    rsi = ta.RSI(close,timePeriod)
    rsiSell = (rsi>70) & (rsi.shift(1)<=70)
    rsiBuy = (rsi<30) & (rsi.shift(1)>=30)
    return rsiSell,rsiBuy, rsi

def SMA(close,sPeriod,lPeriod):
    shortSMA = ta.SMA(close,sPeriod)
    longSMA = ta.SMA(close,lPeriod)
    smaSell = ((shortSMA <= longSMA) & (shortSMA.shift(1) >= longSMA.shift(1)))
    smaBuy = ((shortSMA >= longSMA) & (shortSMA.shift(1) <= longSMA.shift(1)))
    return smaSell,smaBuy,shortSMA,longSMA

def SMA(close,faPeriod,slPeriod, siPeriod):
    pass

def BollingerBands(close, timeperiod=5, nbdevup=2, nbdevdn=2, matype=0):
    pass

#%%
# Bollinger bands
upperband, middleband, lowerband = BBANDS(close, timeperiod=5, nbdevup=2, nbdevdn=2, matype=0)
    
# MACD
macd, macdsignal, macdhist = MACD(close, fastperiod=12, slowperiod=26, signalperiod=9)

# RSI
real = RSI(close, timeperiod=14)

# Stochastic
slowk, slowd = STOCH(high, low, close, fastk_period=5, slowk_period=3, slowk_matype=0, slowd_period=3, slowd_matype=0)

# Exponential moving average
real = EMA(close, timeperiod=30)
